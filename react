npm install -g create-react-app
----------------------
npx create-react-app rag-query-app
cd rag-query-app
--------------------

import React, { useState } from 'react';
import './App.css';

function App() {
  const [query, setQuery] = useState('');
  const [result, setResult] = useState('');

  const handleInputChange = (event) => {
    setQuery(event.target.value);
  };

  const handleSubmit = async () => {
    try {
      // 这里假设你的后端API位于 http://localhost:3001/query
      const response = await fetch('http://localhost:3001/query', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ query }),
      });
      const data = await response.json();
      setResult(data.result); // 假设后端返回的数据结构为 { result: "查询结果" }
    } catch (error) {
      console.error('Error:', error);
    }
  };

  return (
    <div className="App">
      <header className="App-header">
        <h1>知识库查询系统</h1>
        <input type="text" value={query} onChange={handleInputChange} placeholder="请输入查询内容..." />
        <button onClick={handleSubmit}>查询</button>
        <p>{result}</p>
      </header>
    </div>
  );
}

export default App;

------------------
/* src/App.css */
.App {
  text-align: center;
  max-width: 600px;
  margin: auto;
  padding: 20px;
}

.App-header {
  background-color: #f0f0f0;
  padding: 30px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

input[type="text"] {
  width: calc(100% - 10px);
  padding: 10px;
  margin-bottom: 20px;
  font-size: 16px;
}

button {
  padding: 10px 20px;
  font-size: 16px;
  color: white;
  background-color: #007BFF;
  border: none;
  cursor: pointer;
}

button:hover {
  background-color: #0056b3;
}
-------------------
注意事项
后端API地址：请根据实际部署的服务地址替换http://localhost:3001/query。
状态管理：这里使用了React Hooks (useState) 来管理组件内部的状态。
错误处理：在handleSubmit函数中添加了基本的错误处理。

npm start
